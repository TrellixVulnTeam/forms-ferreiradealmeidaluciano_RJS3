{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction ReactiveFormsComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El nombre es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ReactiveFormsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, ReactiveFormsComponent_div_7_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.name.errors.required);\n  }\n}\n\nfunction ReactiveFormsComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El email debe de ser v\\u00E1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ReactiveFormsComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, ReactiveFormsComponent_div_12_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.email.errors.email);\n  }\n}\n\nfunction ReactiveFormsComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Contrase\\u00F1a requerida\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ReactiveFormsComponent_div_16_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"La contrase\\u00F1a debe tener al menos 6 caracteres\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ReactiveFormsComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, ReactiveFormsComponent_div_16_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, ReactiveFormsComponent_div_16_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.password.errors.minlength);\n  }\n}\n\nfunction ReactiveFormsComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Repetir contrase\\u00F1a\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ReactiveFormsComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Las contrase\\u00F1as debden de coincidir\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ReactiveFormsComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, ReactiveFormsComponent_div_20_div_1_Template, 2, 0, \"div\", 12);\n    i0.ɵɵtemplate(2, ReactiveFormsComponent_div_20_div_2_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.form.repeatPass.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.form.repeatPass.errors.mustMatch);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let ReactiveFormsComponent = /*#__PURE__*/(() => {\n  class ReactiveFormsComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.registerForm = this.formBuilder.group({\n        name: [\"\", Validators.required],\n        email: [\"\", [Validators.required, Validators.email]],\n        password: [\"\", [Validators.required, Validators.minLength(6)]],\n        repeatPass: [\"\", Validators.required]\n      }, {\n        validator: this.MustMatch(\"password\", \"repeatPass\") // Validando\n\n      });\n    } // custom validator to check that two fields match\n\n\n    MustMatch(controlName, matchingControlName) {\n      return formGroup => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n          // return if another validator has already found an error on the matchingControl\n          return;\n        } // set error on matchingControl if validation fails\n\n\n        if (control.value !== matchingControl.value) {\n          matchingControl.setErrors({\n            mustMatch: true\n          });\n        } else {\n          matchingControl.setErrors(null);\n        }\n      };\n    } // convenience getter for easy access to form fields\n\n\n    get form() {\n      return this.registerForm.controls;\n    }\n\n    onSubmit() {\n      this.submitted = true; // stop here if form is invalid\n\n      if (this.registerForm.invalid) {\n        return;\n      } // display form values on success\n\n\n      alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(this.registerForm.value, null, 4));\n    }\n\n    onReset() {\n      this.submitted = false;\n      this.registerForm.reset();\n    }\n\n  }\n\n  ReactiveFormsComponent.ɵfac = function ReactiveFormsComponent_Factory(t) {\n    return new (t || ReactiveFormsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  ReactiveFormsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReactiveFormsComponent,\n    selectors: [[\"app-reactive-forms\"]],\n    decls: 26,\n    vars: 18,\n    consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"mt-5\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"repeatPass\", 1, \"form-control\", 3, \"ngClass\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"mr-1\", 3, \"disabled\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function ReactiveFormsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ReactiveFormsComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"h3\");\n        i0.ɵɵtext(3, \"Inicio de sesi\\u00F3n - Reactive Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵtemplate(7, ReactiveFormsComponent_div_7_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\");\n        i0.ɵɵtext(10, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, ReactiveFormsComponent_div_12_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(13, \"label\");\n        i0.ɵɵtext(14, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 6);\n        i0.ɵɵtemplate(16, ReactiveFormsComponent_div_16_Template, 3, 2, \"div\", 3);\n        i0.ɵɵelementStart(17, \"label\");\n        i0.ɵɵtext(18, \"Repetir contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 7);\n        i0.ɵɵtemplate(20, ReactiveFormsComponent_div_20_Template, 3, 2, \"div\", 3);\n        i0.ɵɵelementStart(21, \"div\", 8)(22, \"button\", 9);\n        i0.ɵɵtext(23, \"Registrarse\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ReactiveFormsComponent_Template_button_click_24_listener() {\n          return ctx.onReset();\n        });\n        i0.ɵɵtext(25, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.form.name.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.name.errors);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.form.email.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.email.errors);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.form.password.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.password.errors);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.form.repeatPass.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.repeatPass.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return ReactiveFormsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}